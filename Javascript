/**
 * MAXIMAX — WhatsApp auto-reply (multilingual + fallback)
 */
function onFormSubmit(e) {
  try {
    const nv = e?.namedValues || {};

    // --- Match your exact form labels ---
    const PHONE_LABEL = "ENTER YOUR WHATSAPP NUMBER (COUNTRY CODE) EX: +1 234-789-2788";
    const LANG_LABEL  = "CHOOSE YOUR LANGUAGE / CHWAZI LANG OU / ELIGE SU IDIOMA";

    const name =
      first(nv["Name"]) ||
      first(nv["Full Name"]) ||
      first(nv["Non"]) ||
      first(nv["Nom"]) ||
      "Client";

    let phone = first(nv[PHONE_LABEL]) || "";
    let lang  = first(nv[LANG_LABEL]) || ""; // may be empty

    // Normalize phone (keep digits, default to US if 10 digits)
    phone = (phone + "").replace(/[^\d]/g, "");
    if (phone.length === 10) phone = "1" + phone;
    const TO = "whatsapp:+" + phone;

    // Canonicalize language + fallback to English
    const allowed = new Set(["Kreyòl Ayisyen", "English", "Español"]);
    if (!allowed.has(lang)) lang = "English";

    const messages = {
      "Kreyòl Ayisyen":
        `Bonjou ${name}, mèsi paske ou ranpli fòm MAXIMAX.\n` +
        `Nou resevwa demann ou an. N ap tounen vit. ✅\n` +
        `— MAXIMAX MULTI SERVICES | MAXIMAX ALWAY MAXIMIZED`,
      "English":
        `Hi ${name}, thanks for completing the MAXIMAX form.\n` +
        `We received your request and will follow up shortly. ✅\n` +
        `— MAXIMAX MULTI SERVICES | MAXIMAX ALWAY MAXIMIZED`,
      "Español":
        `Hola ${name}, gracias por completar el formulario de MAXIMAX.\n` +
        `Hemos recibido su solicitud y le responderemos en breve. ✅\n` +
        `— MAXIMAX MULTI SERVICES | MAXIMAX ALWAY MAXIMIZED`,
    };
    const Body = messages[lang];

    // Secrets (Project Settings → Script properties)
    const props = PropertiesService.getScriptProperties();
    const SID  = props.getProperty("TWILIO_SID");
    const AUTH = props.getProperty("TWILIO_AUTH");
    const FROM = props.getProperty("TWILIO_FROM"); // e.g., whatsapp:+14155238886

    if (!SID || !AUTH || !FROM) throw new Error("Missing TWILIO_SID / TWILIO_AUTH / TWILIO_FROM");

    const url = `https://api.twilio.com/2010-04-01/Accounts/${SID}/Messages.json`;
    const payload = { From: FROM, To: TO, Body };
    const options = {
      method: "post",
      payload,
      headers: { Authorization: "Basic " + Utilities.base64Encode(SID + ":" + AUTH) },
      muteHttpExceptions: true,
    };

    const res = UrlFetchApp.fetch(url, options);
    Logger.log(res.getResponseCode() + " " + res.getContentText());
  } catch (err) {
    Logger.log("onFormSubmit error: " + err);
  }
}

function first(v){ return Array.isArray(v) ? (v[0] || "").toString().trim() : (v || "").toString().trim(); }/**
 * MAXIMAX WhatsApp auto-reply via Twilio
 * Triggers every time the form is submitted.
 */
function onFormSubmit(e) {
  try {
    const nv = e?.namedValues || {};

    // === Match EXACT question labels from your form ===
    const phoneLabel = "ENTER YOUR WHATSAPP NUMBER (COUNTRY CODE) EX: +1 347-892-7288";
    const name = first(nv["Name"]) || first(nv["Full Name"]) || "Client";
    let phone = first(nv[phoneLabel]) || "";

    // Normalize phone -> digits only, keep country code
    phone = (phone + "").replace(/[^\d]/g, "");
    if (phone.length === 10) phone = "1" + phone; // default to US if 10 digits
    const TO = "whatsapp:+" + phone;

    const msg = [
      `Bonjou ${name}, mèsi paske ou ranpli fòm MAXIMAX.`,
      `Nou resevwa demann ou an. N ap tounen vit. ✅`,
      ``,
      `Hi ${name}, thanks for completing the MAXIMAX form.`,
      `We received your request and will follow up shortly. ✅`,
      `— MAXIMAX MULTI SERVICES | MAXIMAX ALWAY MAXIMIZED`
    ].join("\n");

    // Secrets from Script Properties
    const props = PropertiesService.getScriptProperties();
    const SID  = props.getProperty("TWILIO_SID");      // ACxxxxxxxx...
    const AUTH = props.getProperty("TWILIO_AUTH");     // Auth Token
    const FROM = props.getProperty("TWILIO_FROM");     // whatsapp:+14155238886 (sandbox) or prod

    if (!SID || !AUTH || !FROM) throw new Error("Missing TWILIO_SID / TWILIO_AUTH / TWILIO_FROM");

    const url = `https://api.twilio.com/2010-04-01/Accounts/${SID}/Messages.json`;
    const payload = { From: FROM, To: TO, Body: msg };
    const options = {
      method: "post",
      payload,
      headers: { Authorization: "Basic " + Utilities.base64Encode(SID + ":" + AUTH) },
      muteHttpExceptions: true
    };

    const res = UrlFetchApp.fetch(url, options);
    Logger.log(res.getResponseCode() + " " + res.getContentText());
  } catch (err) {
    Logger.log("onFormSubmit error: " + err);
  }
}

function first(v){ return Array.isArray(v) ? (v[0] || "").toString().trim() : (v || "").toString().trim(); }/**
 * MAXIMAX WhatsApp Auto-Reply via Twilio
 * Triggers on every Google Form submission.
 */
function onFormSubmit(e) {
  try {
    // 1) Read form values safely
    // e.namedValues is a map: { "Full Name": ["John"], "Phone": ["(317) 538-1150"], ... }
    const nv = e && e.namedValues ? e.namedValues : {};function onFormSubmit(e) {
  try {
    const nv = e?.namedValues || {};
    const fullName = pick(nv, ["Name","Full Name","Non","Nom"]) || "Client";
    let phone = pick(nv, ["Phone","Telephone","Nimewo","Téléphone"]) || "";
    const service = pick(nv, ["Service","Type of Service","Sèvis"]) || "";

    // Normalize (US default). Adjust prefix if most clients are not US.
    phone = (phone+"").replace(/[^\d]/g,"");
    if (phone.length === 10) phone = "1"+phone; // +1 area
    const TO = "whatsapp:+"+phone;

    const msg = [
      `Bonjou ${fullName}, mèsi paske ou ranpli fòm MAXIMAX.`,
      service ? `Sèvis: ${service}` : ``,
      `Nou resevwa demann ou an. N ap tounen rapid. ✅`,
      ``,
      `Hi ${fullName}, thanks for completing the MAXIMAX form.`,
      service ? `Service: ${service}` : ``,
      `We received your request. We’ll follow up shortly. ✅`,
      `— MAXIMAX MULTI SERVICES | MAXIMAX ALWAY MAXIMIZED`
    ].filter(Boolean).join("\n");

    const props = PropertiesService.getScriptProperties();
    const SID  = props.getProperty("TWILIO_SID");
    const AUTH = props.getProperty("TWILIO_AUTH");
    const FROM = props.getProperty("TWILIO_FROM"); // e.g. whatsapp:+14155238886
    if (!SID || !AUTH || !FROM) throw new Error("Missing TWILIO_* properties");

    const url = `https://api.twilio.com/2010-04-01/Accounts/${SID}/Messages.json`;
    const payload = { From: FROM, To: TO, Body: msg };
    const options = {
      method: "post",
      payload,
      headers: { Authorization: "Basic "+Utilities.base64Encode(SID+":"+AUTH) },
      muteHttpExceptions: true
    };

    const res = UrlFetchApp.fetch(url, options);
    const ok = res.getResponseCode();
    Logger.log(ok+" "+res.getContentText());
  } catch (err) {
    Logger.log("Error: "+err);
  }
}

function pick(nv, keys){
  for (const k of keys){
    const v = nv[k];
    if (v && v[0] !== undefined) return (v[0]||"").toString().trim();
  }
  return "";
}

    const fullName = getFirst(nv["Name"]) || getFirst(nv["Full Name"]) || getFirst(nv["Non"]) || "Client";
    let phoneRaw = getFirst(nv["Phone"]) || getFirst(nv["Telephone"]) || getFirst(nv["Nimewo"]) || "";
    const service = getFirst(nv["Service"]) || getFirst(nv["Type of Service"]) || "";

    // 2) Normalize phone (US default; adjust if needed)
    // keep digits only
    let digits = (phoneRaw + "").replace(/[^\d]/g, "");
    if (digits.length === 10) digits = "1" + digits; // add US country code if 10 digits
    if (!digits.startsWith("1") && digits.length < 11) {
      // If most clients are US, you can force "1" here, else handle per-country
      // digits = "1" + digits;
    }
    const TO = "whatsapp:+" + digits;

    // 3) Build bilingual message (Kreyòl + English)
    const msg = [
      `Bonjou ${fullName}, mèsi paske ou ranpli fòm MAXIMAX.`,
      service ? `Sèvis w chwazi: ${service}.` : ``,
      `Nou resevwa demann ou an. N ap tounen rapid. ✅`,
      ``,
      `Hi ${fullName}, thanks for completing the MAXIMAX form.`,
      service ? `Selected service: ${service}.` : ``,
      `We received your request and will follow up shortly. ✅`,
      ``,
      `— MAXIMAX MULTI SERVICES | "MAXIMAX ALWAY MAXIMIZED"`
    ].filter(Boolean).join("\n");

    // 4) Secrets (set these in Script Properties)
    const props = PropertiesService.getScriptProperties();
    const SID  = props.getProperty("TWILIO_SID");      // ACxxxxxxxxxxxxxxxxxxxx
    const AUTH = props.getProperty("TWILIO_AUTH");     // your auth token
    const FROM = props.getProperty("TWILIO_FROM");     // e.g., whatsapp:+14155238886 (sandbox) or your prod number

    if (!SID || !AUTH || !FROM) {
      throw new Error("Missing TWILIO_SID / TWILIO_AUTH / TWILIO_FROM in Script Properties.");
    }

    // 5) Send via Twilio REST API
    const url = `https://api.twilio.com/2010-04-01/Accounts/${SID}/Messages.json`;
    const payload = { From: FROM, To: TO, Body: msg };
    const options = {
      method: "post",
      payload,
      headers: { Authorization: "Basic " + Util
/** Google Form → WhatsApp via Twilio (Maximax)
 * Set Script Properties (Project Settings):
 *  - TWILIO_SID               e.g. ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 *  - TWILIO_TOKEN             your auth token
 *  - TWILIO_WHATSAPP_FROM     e.g. whatsapp:+14155238886 (sandbox) or whatsapp:+1XXXXXXXXXX (approved)
 *  - ADMIN_NUMBERS            comma-separated, e.g. whatsapp:+15015551234,whatsapp:+15015554321
 *  - CUSTOMER_PHONE_FIELD     EXACT question title for the phone field (e.g. Phone Number)
 *  - BRAND_NAME               e.g. Maximax Multi Services
 */

function onFormSubmit(e) {
  try {
    const props = PropertiesService.getScriptProperties();
    const from = props.getProperty('TWILIO_WHATSAPP_FROM');
    const adminsCSV = props.getProperty('ADMIN_NUMBERS') || '';
    const brand = props.getProperty('BRAND_NAME') || 'Maximax Multi Services';
    const adminList = adminsCSV.split(',').map(s => s.trim()).filter(Boolean);

    const nv = (e && e.namedValues) ? e.namedValues : {};
    const summary = buildSummary(nv);

    // 1) Notify admins
    if (adminList.length) {
      const adminBody = `🟧 ${brand}: New form submission\n\n${summary}`;
      adminList.forEach(to => sendTwilioWhatsApp({ to, from, body: adminBody }));
    }

    // 2) Notify customer (optional)
    const phoneField = (props.getProperty('CUSTOMER_PHONE_FIELD') || '').trim();
    const phoneAnswer = phoneField && nv[phoneField] ? String(nv[phoneField][0]).trim() : '';
    if (phoneAnswer) {
      const to = normalizeAsWhatsApp(phoneAnswer);
      const replyBody = `${brand}: Mèsi! Nou resevwa fòm ou a.\nYo pral kontakte w touswit.\n\nReferans:\n${summary.slice(0, 900)}`;
      sendTwilioWhatsApp({ to, from, body: replyBody });
    }
  } catch (err) {
    console.error('onFormSubmit error:', err);
  }
}

function buildSummary(namedValues) {
  const lines = [];
  Object.keys(namedValues).forEach(key => {
    const v = Array.isArray(namedValues[key]) ? namedValues[key][0] : namedValues[key];
    if (v !== '' && v != null) lines.push(`${key}: ${v}`);
  });
  const txt = lines.join('\n');
  return txt.length > 3500 ? txt.slice(0, 3490) + '…' : txt;
}

function normalizeAsWhatsApp(phone) {
  const d = ('' + phone).replace(/\s+/g, '');
  return d.startsWith('whatsapp:') ? d : `whatsapp:${d}`;
}

function sendTwilioWhatsApp({ to, from, body }) {
  const props = PropertiesService.getScriptProperties();
  const SID = props.getProperty('TWILIO_SID');
  const TOKEN = props.getProperty('TWILIO_TOKEN');
  if (!SID || !TOKEN || !from) throw new Error('Missing Twilio props');

  const url = `https://api.twilio.com/2010-04-01/Accounts/${SID}/Messages.json`;
  const payload = { To: to, From: from, Body: body };
  const options = {
    method: 'post',
    payload,
    headers: { Authorization: 'Basic ' + Utilities.base64Encode(`${SID}:${TOKEN}`) },
    muteHttpExceptions: true
  };
  const res = UrlFetchApp.fetch(url, options);
  if (res.getResponseCode() >= 300) {
    console.error('Twilio error', res.getResponseCode(), res.getContentText());
  }
}
